#[derive(Drop)]
enum Error {
    ALREADY_CLAIMED,
    ALREADY_CLAIMED_ALL_REWARDS,
    ALREADY_JOINED_IN,
    ALREADY_REDEEMED_INVITE_CODE,
    DESTINATION_ALREADY_SCOUTED,
    DRAGON_ALREADY_ACTIVATED,
    DRAGON_ALREADY_INSERTED,
    DRAGON_IS_NOT_AVAILABLE,
    DRAGON_NOT_EXISTS,
    DRAGON_NOT_INSERTED,
    DRAGON_NOT_NFT,
    DRAGON_SHOULD_BE_FLYING,
    EXCEEDS_DRAGON_OWNED_LIMIT,
    GAME_NOT_PLAYABLE,
    INVALID_ACCOUNT_LEVEL,
    INVALID_ATTACK_TYPE,
    INVALID_BASE_RESOURCES_TIMESTAMP,
    INVALID_BASE_RESOURCES_TYPE,
    INVALID_CASE_BLOCK_DIRECTION,
    INVALID_CASE_DAILY_TIMESTAMP,
    INVALID_CASE_DRAGON_ELEMENT,
    INVALID_CASE_DRAGON_MAP_ID,
    INVALID_CASE_DRAGON_RARITY,
    INVALID_CASE_DRAGON_TITLE,
    INVALID_CASE_ISLAND_BLOCK_DIRECTION,
    INVALID_CASE_ISLAND_LEVEL,
    INVALID_CASE_ISLAND_LEVEL_RESOURCES,
    INVALID_CASE_JOIN_MAP,
    INVALID_CASE_MODEL_ID,
    INVALID_CASE_POWER_RATING,
    INVALID_CASE_RESOURCES_CLAIM_TYPE,
    INVALID_CASE_RESOURCES_UPDATE,
    INVALID_CASE_SUB_BLOCK_POSITION_IDS,
    INVALID_DISTANCE,
    INVALID_DRAGON_ID,
    INVALID_DRAGON_MAP_ID,
    INVALID_DRAGON_TYPE,
    INVALID_INVITATION_LEVEL,
    INVALID_INVITE_CODE,
    INVALID_ISLAND_FROM,
    INVALID_ISLAND_IDS_LENGTH,
    INVALID_ISLAND_TO,
    INVALID_JOURNEY_ID,
    INVALID_DRAGON_LEVEL,
    INVALID_MISSION_ID,
    INVALID_NUM,
    INVALID_PACK_NUMBER,
    INVALID_PLAYER_ADDRESS,
    INVALID_POSITION,
    INVALID_REWARD,
    INVALID_SHIELD_TYPE,
    INVALID_SPEED,
    INVALID_TIME,
    ISLAND_ALREADY_PROTECTED,
    ISLAND_FROM_PROTECTED,
    ISLAND_NOT_EXISTS,
    ISLAND_NOT_PROTECTED,
    ISLAND_REACHED_MAX_FOOD_CAPACITY,
    ISLAND_REACHED_MAX_STONE_CAPACITY,
    ISLAND_REACHED_MAX_RESOURCES_CAPACITY,
    JOURNEY_ALREADY_FINISHED,
    JOURNEY_IN_PROGRESS,
    JOURNEY_TO_THE_SAME_ISLAND,
    MAP_ALREADY_INITIALIZED,
    MAP_FULL_PLAYER,
    MAP_NOT_INITIALIZED,
    NO_MORE_ISLAND_TO_JOIN,
    NONCE_ALREADY_USED,
    NOT_COMPLETE_MISSION_YET,
    NOT_DRAGON_OWNER,
    NOT_ENOUGH_ACCOUNT_EXP,
    NOT_ENOUGH_BASE_RESOURCES_AMOUNT,
    NOT_ENOUGH_CAPACITY_ON_DRAGON,
    NOT_ENOUGH_DRAGARK_BALANCE,
    NOT_ENOUGH_DRAGARK_UPGRADE_RESOURCES,
    NOT_ENOUGH_ENERGY,
    NOT_ENOUGH_FOOD,
    NOT_ENOUGH_INVITATION_EXP,
    NOT_ENOUGH_SHIELD,
    NOT_ENOUGH_STONE,
    NOT_ENOUGH_TIME_TO_CLAIM,
    NOT_ISLAND_OWNER,
    NOT_OUT_OF_ENERGY_YET,
    NOT_OWN_ANY_DRAGON,
    NOT_OWN_DRAGON,
    NOT_OWN_ISLAND,
    NOT_TIME_TO_CLAIM_YET,
    NOT_WORLD_OWNER,
    OUT_OF_ENERGY_BOUGHT,
    PLAYER_NOT_AVAILABLE_FOR_REJOIN,
    PLAYER_NOT_JOINED_MAP,
    REACHED_MAX_ISLAND_GENERATED,
    REACHED_MAXIMUM_CLAIM_TIME,
    SIGNATURE_NOT_MATCH,
    TRANSPORT_TO_THE_SAME_DESTINATION,
    WRONG_CALLER,
    WRONG_MAP
}

#[inline(always)]
fn panic_by_err(error: Error, data: Option<felt252>) -> core::never {
    match error {
        Error::ALREADY_CLAIMED => panic!("Already claimed"),
        Error::ALREADY_CLAIMED_ALL_REWARDS => panic!("Already claimed all rewards"),
        Error::ALREADY_JOINED_IN => panic!("Already joined in"),
        Error::ALREADY_REDEEMED_INVITE_CODE => panic!("Already redeemed invite code"),
        Error::DESTINATION_ALREADY_SCOUTED => panic!("Destination already scouted"),
        Error::DRAGON_ALREADY_ACTIVATED => panic!("Dragon already activated"),
        Error::DRAGON_ALREADY_INSERTED => panic!("Dragon already inserted"),
        Error::DRAGON_IS_NOT_AVAILABLE => panic!("Dragon is not available"),
        Error::DRAGON_NOT_EXISTS => panic!("Dragon not exists"),
        Error::DRAGON_NOT_INSERTED => panic!("Dragon not inserted"),
        Error::DRAGON_NOT_NFT => panic!("Dragon not NFT"),
        Error::DRAGON_SHOULD_BE_FLYING => panic!("Dragon should be flying"),
        Error::EXCEEDS_DRAGON_OWNED_LIMIT => panic!("Exceeds dragon owned limit"),
        Error::GAME_NOT_PLAYABLE => panic!("Game not playable"),
        Error::INVALID_ACCOUNT_LEVEL => panic!("Invalid account level"),
        Error::INVALID_ATTACK_TYPE => panic!("Invalid attack type"),
        Error::INVALID_BASE_RESOURCES_TIMESTAMP => panic!("Invalid base resources timestamp"),
        Error::INVALID_BASE_RESOURCES_TYPE => panic!("Invalid base resources type"),
        Error::INVALID_CASE_BLOCK_DIRECTION => panic!("Invalid case block direction"),
        Error::INVALID_CASE_DAILY_TIMESTAMP => panic!("Invalid case daily timestamp"),
        Error::INVALID_CASE_DRAGON_ELEMENT => panic!("Invalid case dragon element"),
        Error::INVALID_CASE_DRAGON_MAP_ID => panic!("Invalid case dragon map id"),
        Error::INVALID_CASE_DRAGON_RARITY => panic!("Invalid case dragon rarity"),
        Error::INVALID_CASE_DRAGON_TITLE => panic!("Invalid case dragon title"),
        Error::INVALID_CASE_ISLAND_BLOCK_DIRECTION => panic!("Invalid case island block direction"),
        Error::INVALID_CASE_ISLAND_LEVEL => panic!("Invalid case island level"),
        Error::INVALID_CASE_ISLAND_LEVEL_RESOURCES => panic!("Invalid case island level resources"),
        Error::INVALID_CASE_JOIN_MAP => panic!("Invalid case join map"),
        Error::INVALID_CASE_MODEL_ID => panic!("Invalid case model id"),
        Error::INVALID_CASE_POWER_RATING => panic!("Invalid case power rating"),
        Error::INVALID_CASE_RESOURCES_CLAIM_TYPE => panic!("Invalid case resources claim type"),
        Error::INVALID_CASE_RESOURCES_UPDATE => panic!("Invalid case resources update"),
        Error::INVALID_CASE_SUB_BLOCK_POSITION_IDS => panic!("Invalid case sub block position ids"),
        Error::INVALID_DISTANCE => panic!("Invalid distance"),
        Error::INVALID_DRAGON_ID => panic!("Invalid dragon id"),
        Error::INVALID_DRAGON_MAP_ID => panic!("Invalid dragon map id"),
        Error::INVALID_DRAGON_TYPE => panic!("Invalid dragon type"),
        Error::INVALID_INVITATION_LEVEL => panic!("Invalid invitation level"),
        Error::INVALID_INVITE_CODE => panic!("Invalid invite code"),
        Error::INVALID_ISLAND_FROM => panic!("Invalid island from"),
        Error::INVALID_ISLAND_IDS_LENGTH => panic!("Invalid island ids length"),
        Error::INVALID_ISLAND_TO => panic!("Invalid island to"),
        Error::INVALID_JOURNEY_ID => panic!("Invalid journey id"),
        Error::INVALID_DRAGON_LEVEL => panic!("Invalid dragon level"),
        Error::INVALID_MISSION_ID => panic!("Invalid mission id"),
        Error::INVALID_NUM => panic!("Invalid num"),
        Error::INVALID_PACK_NUMBER => panic!("Invalid pack number"),
        Error::INVALID_PLAYER_ADDRESS => panic!("Invalid player address"),
        Error::INVALID_POSITION => panic!("Invalid position"),
        Error::INVALID_REWARD => panic!("Invalid reward"),
        Error::INVALID_SHIELD_TYPE => panic!("Invalid shield type"),
        Error::INVALID_SPEED => panic!("Invalid speed"),
        Error::INVALID_TIME => panic!("Invalid time"),
        Error::ISLAND_ALREADY_PROTECTED => panic!("Island already protected"),
        Error::ISLAND_FROM_PROTECTED => panic!("Island from protected"),
        Error::ISLAND_NOT_EXISTS => panic!("Island not exists"),
        Error::ISLAND_NOT_PROTECTED => panic!("Island not protected"),
        Error::ISLAND_REACHED_MAX_FOOD_CAPACITY => panic!("Island reached max food capacity"),
        Error::ISLAND_REACHED_MAX_STONE_CAPACITY => panic!("Island reached max stone capacity"),
        Error::ISLAND_REACHED_MAX_RESOURCES_CAPACITY => panic!(
            "Island reached max resources capacity"
        ),
        Error::JOURNEY_ALREADY_FINISHED => panic!("Journey already finished"),
        Error::JOURNEY_IN_PROGRESS => panic!("Journey in progress"),
        Error::JOURNEY_TO_THE_SAME_ISLAND => panic!("Journey to the same island"),
        Error::MAP_ALREADY_INITIALIZED => panic!("Map already initialized"),
        Error::MAP_FULL_PLAYER => panic!("Map full player"),
        Error::MAP_NOT_INITIALIZED => panic!("Map not initialized"),
        Error::NO_MORE_ISLAND_TO_JOIN => panic!("No more island to join"),
        Error::NONCE_ALREADY_USED => panic!("Nonce already used"),
        Error::NOT_COMPLETE_MISSION_YET => panic!("Not complete mission yet"),
        Error::NOT_DRAGON_OWNER => panic!("Not dragon owner"),
        Error::NOT_ENOUGH_ACCOUNT_EXP => panic!(
            "Not enough account exp, need {} more", data.unwrap()
        ),
        Error::NOT_ENOUGH_BASE_RESOURCES_AMOUNT => panic!("Not enough base resources amount"),
        Error::NOT_ENOUGH_CAPACITY_ON_DRAGON => panic!("Not enough capacity on dragon"),
        Error::NOT_ENOUGH_DRAGARK_BALANCE => panic!("Not enough dragark balance"),
        Error::NOT_ENOUGH_DRAGARK_UPGRADE_RESOURCES => panic!(
            "Not enough dragark upgrade resources"
        ),
        Error::NOT_ENOUGH_ENERGY => panic!("Not enough energy"),
        Error::NOT_ENOUGH_FOOD => panic!("Not enough food"),
        Error::NOT_ENOUGH_INVITATION_EXP => panic!(
            "Not enough invitation exp, need {} more", data.unwrap()
        ),
        Error::NOT_ENOUGH_SHIELD => panic!("Not enough shield"),
        Error::NOT_ENOUGH_STONE => panic!("Not enough stone"),
        Error::NOT_ENOUGH_TIME_TO_CLAIM => panic!("Not enough time to claim"),
        Error::NOT_ISLAND_OWNER => panic!("Not island owner"),
        Error::NOT_OUT_OF_ENERGY_YET => panic!("Not out of energy yet"),
        Error::NOT_OWN_ANY_DRAGON => panic!("Not own any dragon"),
        Error::NOT_OWN_DRAGON => panic!("Not own dragon"),
        Error::NOT_OWN_ISLAND => panic!("Not own island"),
        Error::NOT_TIME_TO_CLAIM_YET => panic!("Not time to claim yet"),
        Error::NOT_WORLD_OWNER => panic!("Not world owner"),
        Error::OUT_OF_ENERGY_BOUGHT => panic!("Out of energy bought"),
        Error::PLAYER_NOT_AVAILABLE_FOR_REJOIN => panic!("Player not available for rejoin"),
        Error::PLAYER_NOT_JOINED_MAP => panic!("Player not joined map"),
        Error::REACHED_MAX_ISLAND_GENERATED => panic!("Reached max island generated"),
        Error::REACHED_MAXIMUM_CLAIM_TIME => panic!("Reached maximum claim time"),
        Error::SIGNATURE_NOT_MATCH => panic!("Signature not match"),
        Error::TRANSPORT_TO_THE_SAME_DESTINATION => panic!("Same destination"),
        Error::WRONG_CALLER => panic!("Wrong caller"),
        Error::WRONG_MAP => panic!("Wrong map")
    }
}

#[inline(always)]
fn assert_with_err(condition: bool, error: Error, data: Option<felt252>) {
    if (!condition) {
        panic_by_err(error, data);
    }
}
